[credential]
	helper = osxkeychain

[github]
  user = gudleik

[user]
	name = Gudleik Rasch
	email = gudleik@gmail.com

[color]
  ui = auto
  diff = auto
  status = auto
  branch = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[alias]
	# add
	a = add 													# add
  aa = add --all 										# add all

	# commit
  c = commit -m                     # commit with message
  ca = commit -am                   # commit all with message
  ci = commit                       # commit
  amend = commit --amend            # ammend your last commit
  ammend = commit --amend           # ammend your last commit

	# checkout
  co = checkout
  nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")
  track = checkout -t

  # cherry-pick
  cp = cherry-pick -x               # grab a change from a branch

  # diff
  d = diff                          # diff unstaged changes
  dc = diff --cached                # diff staged changes
  last = diff HEAD^                 # diff last committed change
  ds = diff --stat=160,120

	# log
  #l = log --graph --date=short
  l = log --graph --abbrev-commit --date=relative
  ll = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  changelog = log --pretty=format:\" * %s\"
  shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
  last = log -1 HEAD

  # pull
  pl = pull                         # pull
  fa = fetch --all

  # push
  ps = push                         # push
  pom = push origin master

  # rebase
  rc = rebase --continue            # continue rebase
  rs = rebase --skip                # skip rebase

  # remote
  r = remote -v                     # show remotes (verbose)

  # reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool

  # stash
  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)

  # status
  s = status                        # status
  st = status                       # status
  stat = status                     # status

  # tag
  t = tag -n                        # show tags with <n> lines of each tag message


[format]
  pretty=format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset

[apply]
  whitespace = nowarn

[core]
  autocrlf = false
  excludesfile = /Users/gudleik/.gitignore
	quotepath = false
  editor = vim

[merge]
  tool = vimdiff
  summary = true
  verbosity = 1

[status]
  submodule = 1

[help]
  autocorrect = 1

[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = tracking

[mergetool]
	keepBackup = true

[branch]
  autosetupmerge = true

[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true

[rerere]
  # Remember my merges
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
  enabled = true
